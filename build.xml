<?xml version="1.0" encoding="UTF-8"?>

<!-- This file should not be used directly and always be included from your project's build.xml -->

<project name="creativeshop-base" default="help" description="creativeshop base build definition">
    <!-- Warning! The dot will resolve to the directory from which this file was included (phing was run) -->
    <resolvepath propertyName="project_dir" file="."/>

    <property name="testsuite" value="creativestyle"/>
    <property name="build_dir" value="${project_dir}/build"/>
    <property file="${build_dir}/build.properties"/>
    <property environment="env"/>


    <includepath classpath="${build_dir}/tasks/" />
    <taskdef name="slack" classname="SlackNotificationTask" />

    <import file="${build_dir}/tests.xml"/>
    <import file="${build_dir}/backend.xml"/>
    <import file="${build_dir}/frontend.xml"/>
    <import file="${build_dir}/content-constructor.xml"/>
    <import file="${build_dir}/docker.xml"/>

    <if>
        <not>
            <isset property="envname"/>
        </not>
        <then>
            <property name="envname" value="dev"/>
            <warn message="Property `envname` not set, using default value 'dev'."/>
        </then>
    </if>

    <target name="tests:all">
        <if>
            <equals arg1="${envname}" arg2="ci"/>
            <then>
                <phingcall target="docker:tests"/>
            </then>
            <else>
                <phingcall target="tests"/>
            </else>
        </if>
    </target>

    <target name="build">
        <phingcall target="backend:build"/>
        <phingcall target="frontend:build"/>
        <phingcall target="content-constructor:build"/>
        <if>
            <not>
                <equals arg1="${env.SKIP_TESTS}" arg2="true"/>
            </not>
            <then>
                <phingcall target="tests:all"/>
            </then>
            <else>
                <echo msg="NOTICE: Skipping tests - env var SKIP_TESTS=true"/>
            </else>
        </if>
    </target>

    <target name="ci-build">
        <property name="envname" value="ci" override="true"/>
        <warn message="CI build overrides `envname` to value `ci`"/>
        <trycatch property="exception">
            <try>
                <phingcall target="build"/>
            </try>
            <catch>
                <fail message="${exception}"/>
            </catch>
        </trycatch>
    </target>

    <target name="help" hidden="true">
        <echo msg="Run: phing -list"/>
        <echo msg="to get all available tasks"/>
        <echo msg=""/>
        <echo msg="If you want to run subset of tests:"/>
        <echo msg="phing tests:unit -Dfolder=vendor/creativestyle"/>
        <echo msg="phing tests:unit -Dtestsuite=creativestyle"/>
        <echo msg="phing tests:unit -Dfilter=CustomerTest"/>
    </target>

</project>
