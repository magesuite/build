<?xml version="1.0" encoding="UTF-8"?>
<project name="creativeshop-tests" default="tests">
    <includepath classpath="${build_dir}/tasks/" />

    <taskdef name="clean_database" classname="CleanDatabaseTask" />
    <taskdef name="clean_elasticsearch" classname="CleanElasticsearchTask" />


    <target name="check:phpunit" hidden="true">
        <available file="${phpunit.location}" property="phpunit.available"/>
        <if>
            <not>
                <isset property="phpunit.available"/>
            </not>
            <then>
                <fail message="PHPUnit in location ${phpunit.location} is not available. Install it with composer install."/>
            </then>
        </if>
    </target>

    <target name="tests:unit:check" depends="check:phpunit"/>
    <target name="tests:integration:check" depends="check:phpunit"/>

    <target name="tests:functional:check">
        <phingcall target="check:phpunit">
            <property name="phpunit.location" value="${phpunit.functional.location}"/>
        </phingcall>
    </target>

    <target name="tests" depends="tests:unit, tests:integration"/>

    <target name="tests:unit" depends="tests:unit:check, tests:integration:prepare">
        <phingcall target="tests:run">
            <property name="phpunit.location" value="${phpunit.location}"/>
            <property name="phpunit.xml" value="${phpunit.xml.unit}"/>
        </phingcall>
    </target>

    <target name="tests:integration:prepare" hidden="true">
        <copy file="${build_dir}/${envname}/dev/tests/integration/phpunit.xml"
              tofile="${project_dir}/dev/tests/integration/phpunit.xml"
              overwrite="true"/>
        <copy file="${build_dir}/${envname}/dev/tests/integration/etc/install-config-mysql.php"
              tofile="${project_dir}/dev/tests/integration/etc/install-config-mysql.php"
              overwrite="true"/>
        <copy file="${build_dir}/shared/dev/tests/integration/etc/config-global.php"
              tofile="${project_dir}/dev/tests/integration/etc/config-global.php"
              overwrite="true"/>
    </target>

    <target name="tests:integration" depends="tests:integration:prepare, tests:integration:check">
        <phingcall target="tests:run">
            <property name="phpunit.location" value="${phpunit.location}"/>
            <property name="phpunit.xml" value="${phpunit.xml.integration}"/>
        </phingcall>
    </target>

    <target name="tests:quick-integration:install-module" hidden="true">
        <exec command="composer show reach-digital/magento2-test-framework" dir="${project_dir}" outputProperty="is_installed" />
        <if>
            <contains string="${is_installed}" substring="not found"/>
            <then>
                <echo msg="Installing reach-digital/magento2-test-framework" />
                <exec command="composer require reach-digital/magento2-test-framework" dir="${project_dir}" passthru="true" />
            </then>
        </if>
    </target>

    <target name="tests:quick-integration:prepare" hidden="true">
        <copy file="${build_dir}/${envname}/dev/tests/quick-integration/phpunit.xml"
              tofile="${project_dir}/dev/tests/quick-integration/phpunit.xml"
              overwrite="true"/>
        <copy file="${build_dir}/${envname}/dev/tests/integration/etc/install-config-mysql.php"
              tofile="${project_dir}/dev/tests/quick-integration/etc/install-config-mysql.php"
              overwrite="true"/>
        <copy file="${build_dir}/shared/dev/tests/integration/etc/config-global.php"
              tofile="${project_dir}/dev/tests/quick-integration/etc/config-global.php"
              overwrite="true"/>
    </target>

    <target name="tests:quick-integration" depends="tests:quick-integration:install-module, tests:quick-integration:prepare">
        <phingcall target="tests:run">
            <property name="phpunit.location" value="${phpunit.location}"/>
            <property name="phpunit.xml" value="${phpunit.xml.quick-integration}"/>
        </phingcall>
    </target>

    <target name="tests:functional:prepare" hidden="true">
        <copy file="${build_dir}/shared/dev/tests/functional/phpunit.xml"
              tofile="${project_dir}/dev/tests/functional/phpunit.xml"
              overwrite="true"/>
        <copy file="${build_dir}/shared/dev/tests/functional/etc/config.xml"
              tofile="${project_dir}/dev/tests/functional/etc/config.xml"
              overwrite="true"/>
    </target>

    <target name="tests:functional:composer" hidden="true">
        <exec command="php ${build_dir}/shared/dev/tests/functional/add_namespace.php ${project_dir}/dev/tests/functional/composer.json"
              passthru="true"/>
        <exec command="composer du" dir="${tests.functional.location}" passthru="true"/>
        <exec command="php ${build_dir}/shared/dev/tests/functional/symlink_tests.php" passthru="true"/>
    </target>

    <target name="tests:functional:generate" hidden="true"
            depends="tests:functional:check, tests:functional:prepare, tests:functional:composer">
        <exec command="php utils/generate.php" dir="${tests.functional.location}" passthru="true"/>
    </target>

    <target name="tests:functional" depends="tests:functional:generate">
        <phingcall target="tests:run">
            <property name="phpunit.location" value="${phpunit.functional.location}"/>
            <property name="phpunit.xml" value="${phpunit.xml.functional}"/>
        </phingcall>
    </target>

    <target name="tests:cleanup" depends="tests:integration:prepare">
        <echo msg="Removing dev/tests/integration/tmp/ and generated/ contents" />
        <phingcall target="tests:cleanup:files" />

        <echo msg="Cleaning up database" />
        <phingcall target="tests:cleanup:database" />

        <echo msg="Cleaning up elasticsearch" />
        <phingcall target="tests:cleanup:elasticsearch" />
    </target>

    <target name="tests:cleanup:files" hidden="true">
        <exec command="rm -rf ${project_dir}/dev/tests/integration/tmp/*" passthru="true" />
        <exec command="rm -rf ${project_dir}/generated/*" passthru="true" />
    </target>

    <target name="tests:cleanup:database" depends="tests:integration:prepare" hidden="true">
        <clean_database configPath="${project_dir}/dev/tests/integration/etc/install-config-mysql.php"
                        bootstrapPath="${project_dir}/dev/tests/integration/framework/Magento/TestFramework/Bootstrap.php"
        />
    </target>

    <target name="tests:cleanup:elasticsearch" depends="tests:integration:prepare" hidden="true">
        <clean_elasticsearch configPath="${project_dir}/dev/tests/integration/etc/install-config-mysql.php"
                             bootstrapPath="${project_dir}/dev/tests/integration/framework/Magento/TestFramework/Bootstrap.php"
        />
    </target>

    <target name="tests:run" hidden="true">
        <echo message="Executing tests with environment '${envname}'"/>
        <if>
            <isset property="folder"/>
            <then>
                <exec command="${phpunit.location} -c ${phpunit.xml} ${project_dir}/${folder}"
                      passthru="true"
                      checkreturn="true" level="error"/>
            </then>
            <elseif>
                <isset property="testsuite"/>
                <then>
                    <exec command="${phpunit.location} -c ${phpunit.xml} --testsuite=${testsuite} ${phpunit.flags}"
                          passthru="true" checkreturn="true" level="error"/>
                </then>
            </elseif>
            <elseif>
                <isset property="filter"/>
                <then>
                    <exec command="${phpunit.location} -c $${phpunit.xml} --filter=${filter}"
                          passthru="true" checkreturn="true" level="error"/>
                </then>
            </elseif>
            <else>
                <exec command="${phpunit.location} -c ${phpunit.xml}"
                      passthru="true" checkreturn="true" level="error"/>
            </else>
        </if>
    </target>
</project>
